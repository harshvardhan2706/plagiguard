{"ast":null,"code":"import axios from 'axios';\n\n// Define the base URL for the API\nconst BASE_URL = 'http://localhost:8085';\n\n// Create axios instance with custom config\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 5000,\n  // 5 second timeout\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Handle all responses\n  }\n});\n\n// Add request interceptor to handle authentication\napi.interceptors.request.use(config => {\n  // Get the tokens from localStorage\n  const admin = JSON.parse(localStorage.getItem('admin') || '{}');\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n\n  // Send admin token for admin routes, user token for other routes\n  if (config.url.startsWith('/api/admin') && admin !== null && admin !== void 0 && admin.token) {\n    config.headers.Authorization = `Bearer ${admin.token}`;\n  } else if (user !== null && user !== void 0 && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n\n  // For debugging\n  console.log('Making request to:', config.baseURL + config.url);\n  console.log('Request headers:', config.headers);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  // Check if error is due to authentication\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Clear admin data and redirect to login\n    localStorage.removeItem('admin');\n    window.location.href = '/admin/login';\n  }\n  console.error('Response error:', (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","headers","timeout","validateStatus","status","interceptors","request","use","config","admin","JSON","parse","localStorage","getItem","user","url","startsWith","token","Authorization","console","log","error","Promise","reject","response","_error$response","_error$response2","removeItem","window","location","href","data","message"],"sources":["C:/Users/hvard/plagiguard/plagiguard-frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define the base URL for the API\r\nconst BASE_URL = 'http://localhost:8085';\r\n\r\n// Create axios instance with custom config\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  },\r\n  timeout: 5000, // 5 second timeout\r\n  validateStatus: function (status) {\r\n    return status >= 200 && status < 500; // Handle all responses\r\n  }\r\n});\r\n\r\n// Add request interceptor to handle authentication\r\napi.interceptors.request.use(\r\n  (config) => {    // Get the tokens from localStorage\r\n    const admin = JSON.parse(localStorage.getItem('admin') || '{}');\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\n    // Send admin token for admin routes, user token for other routes\r\n    if (config.url.startsWith('/api/admin') && admin?.token) {\r\n      config.headers.Authorization = `Bearer ${admin.token}`;\r\n    } else if (user?.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n\r\n    // For debugging\r\n    console.log('Making request to:', config.baseURL + config.url);\r\n    console.log('Request headers:', config.headers);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Check if error is due to authentication\r\n    if (error.response?.status === 401) {\r\n      // Clear admin data and redirect to login\r\n      localStorage.removeItem('admin');\r\n      window.location.href = '/admin/login';\r\n    }\r\n    console.error('Response error:', error?.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,IAAI;EAAE;EACfC,cAAc,EAAE,SAAAA,CAAUC,MAAM,EAAE;IAChC,OAAOA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG,CAAC,CAAC;EACxC;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAK;EACf,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EAC/D,MAAMC,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;;EAE7D;EACA,IAAIL,MAAM,CAACO,GAAG,CAACC,UAAU,CAAC,YAAY,CAAC,IAAIP,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEQ,KAAK,EAAE;IACvDT,MAAM,CAACP,OAAO,CAACiB,aAAa,GAAG,UAAUT,KAAK,CAACQ,KAAK,EAAE;EACxD,CAAC,MAAM,IAAIH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,KAAK,EAAE;IACtBT,MAAM,CAACP,OAAO,CAACiB,aAAa,GAAG,UAAUJ,IAAI,CAACG,KAAK,EAAE;EACvD;;EAEA;EACAE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEZ,MAAM,CAACR,OAAO,GAAGQ,MAAM,CAACO,GAAG,CAAC;EAC9DI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,MAAM,CAACP,OAAO,CAAC;EAC/C,OAAOO,MAAM;AACf,CAAC,EACAa,KAAK,IAAK;EACTF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAvB,GAAG,CAACO,YAAY,CAACmB,QAAQ,CAACjB,GAAG,CAC1BiB,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA;EACT;EACA,IAAI,EAAAD,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBrB,MAAM,MAAK,GAAG,EAAE;IAClC;IACAQ,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;EACvC;EACAX,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAK,gBAAA,GAALL,KAAK,CAAEG,QAAQ,cAAAE,gBAAA,uBAAfA,gBAAA,CAAiBK,IAAI,KAAIV,KAAK,CAACW,OAAO,CAAC;EACxE,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}