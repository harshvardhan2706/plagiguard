{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hvard\\\\plagiguard\\\\plagiguard-frontend\\\\src\\\\components\\\\ResultViewer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultViewer() {\n  _s();\n  const navigate = useNavigate();\n  const result = JSON.parse(localStorage.getItem('result'));\n  if (!result) {\n    navigate('/dashboard');\n    return null;\n  }\n  const {\n    content,\n    aiParts,\n    percentAI\n  } = result;\n  const highlightContent = () => {\n    let output = '';\n    content.split(' ').forEach((word, idx) => {\n      if (aiParts.includes(idx)) {\n        output += `<span style=\"background-color: #ffcccc\">${word}</span> `;\n      } else {\n        output += `${word} `;\n      }\n    });\n    return output;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"AI Content Detected: \", percentAI, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-3 mt-3\",\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      dangerouslySetInnerHTML: {\n        __html: highlightContent()\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mt-4\",\n      onClick: () => navigate('/dashboard'),\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultViewer, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ResultViewer;\nexport default ResultViewer;\nvar _c;\n$RefreshReg$(_c, \"ResultViewer\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","ResultViewer","_s","navigate","result","JSON","parse","localStorage","getItem","content","aiParts","percentAI","highlightContent","output","split","forEach","word","idx","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","whiteSpace","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hvard/plagiguard/plagiguard-frontend/src/components/ResultViewer.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ResultViewer() {\r\n  const navigate = useNavigate();\r\n  const result = JSON.parse(localStorage.getItem('result'));\r\n\r\n  if (!result) {\r\n    navigate('/dashboard');\r\n    return null;\r\n  }\r\n\r\n  const { content, aiParts, percentAI } = result;\r\n\r\n  const highlightContent = () => {\r\n    let output = '';\r\n    content.split(' ').forEach((word, idx) => {\r\n      if (aiParts.includes(idx)) {\r\n        output += `<span style=\"background-color: #ffcccc\">${word}</span> `;\r\n      } else {\r\n        output += `${word} `;\r\n      }\r\n    });\r\n    return output;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h4>AI Content Detected: {percentAI}%</h4>\r\n      <div className=\"border p-3 mt-3\" style={{ whiteSpace: 'pre-wrap' }}\r\n        dangerouslySetInnerHTML={{ __html: highlightContent() }}>\r\n      </div>\r\n      <button className=\"btn btn-secondary mt-4\" onClick={() => navigate('/dashboard')}>Back to Dashboard</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EAEzD,IAAI,CAACJ,MAAM,EAAE;IACXD,QAAQ,CAAC,YAAY,CAAC;IACtB,OAAO,IAAI;EACb;EAEA,MAAM;IAAEM,OAAO;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGP,MAAM;EAE9C,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,MAAM,GAAG,EAAE;IACfJ,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MACxC,IAAIP,OAAO,CAACQ,QAAQ,CAACD,GAAG,CAAC,EAAE;QACzBJ,MAAM,IAAI,2CAA2CG,IAAI,UAAU;MACrE,CAAC,MAAM;QACLH,MAAM,IAAI,GAAGG,IAAI,GAAG;MACtB;IACF,CAAC,CAAC;IACF,OAAOH,MAAM;EACf,CAAC;EAED,oBACEb,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAAoB,QAAA,GAAI,uBAAqB,EAACT,SAAS,EAAC,GAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAACM,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAW,CAAE;MACjEC,uBAAuB,EAAE;QAAEC,MAAM,EAAEhB,gBAAgB,CAAC;MAAE;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACNxB,OAAA;MAAQmB,SAAS,EAAC,wBAAwB;MAACU,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,YAAY,CAAE;MAAAiB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzG,CAAC;AAEV;AAACtB,EAAA,CAhCQD,YAAY;EAAA,QACFH,WAAW;AAAA;AAAAgC,EAAA,GADrB7B,YAAY;AAkCrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}