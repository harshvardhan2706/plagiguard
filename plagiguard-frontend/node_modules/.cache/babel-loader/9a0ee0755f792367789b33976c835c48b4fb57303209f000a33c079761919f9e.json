{"ast":null,"code":"import axios from'axios';// Define the base URL for the API\nconst BASE_URL=process.env.REACT_APP_API_BASE_URL;// Create axios instance with custom config\nconst api=axios.create({baseURL:BASE_URL,headers:{'Content-Type':'application/json','Accept':'application/json'},timeout:60000,// 60 second timeout\nvalidateStatus:function(status){return status>=200&&status<500;// Handle all responses\n},// Retry configuration\nretry:3,retryDelay:retryCount=>{return retryCount*1000;// time interval between retries\n}});// Add request interceptor to handle authentication\napi.interceptors.request.use(config=>{var _config$url;// Get the tokens from localStorage\nconst admin=JSON.parse(localStorage.getItem('admin')||'{}');const user=JSON.parse(localStorage.getItem('user')||'{}');// Clone the headers to avoid mutation\nconst headers={...config.headers};// Send admin token for admin routes, user token for other routes\nif((_config$url=config.url)!==null&&_config$url!==void 0&&_config$url.includes('/admin/')&&admin!==null&&admin!==void 0&&admin.token){headers.Authorization=`Bearer ${admin.token}`;}else if(user!==null&&user!==void 0&&user.token){headers.Authorization=`Bearer ${user.token}`;}// For FormData requests, remove Content-Type to let browser set it\nif(config.data instanceof FormData){delete headers['Content-Type'];}// Merge headers back into config\nconfig.headers=headers;// Debug logging only in development\nif(process.env.NODE_ENV==='development'){console.log('Request:',{url:config.baseURL+config.url,method:config.method,headers:{...headers,Authorization:headers.Authorization?'[REDACTED]':undefined},data:config.data instanceof FormData?'[FormData]':config.data});}return config;},error=>{console.error('Request configuration error:',error);return Promise.reject(error);});// Add response interceptor\napi.interceptors.response.use(response=>{return response;},async error=>{var _error$response;const originalRequest=error.config;// If we don't have a config, we can't retry\nif(!originalRequest){return Promise.reject(error);}// Don't retry these status codes\nconst noRetryStatuses=[400,401,403,404,422];// Handle authentication errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){var _originalRequest$url;if((_originalRequest$url=originalRequest.url)!==null&&_originalRequest$url!==void 0&&_originalRequest$url.includes('/admin/')){localStorage.removeItem('admin');window.location.href='/admin/login';}else{localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);}// Handle retry logic\nif(error.response&&!noRetryStatuses.includes(error.response.status)&&!originalRequest._retry&&originalRequest.retry>0){originalRequest._retry=true;originalRequest.retry--;// Wait before retrying\nawait new Promise(resolve=>setTimeout(resolve,originalRequest.retryDelay(originalRequest.retry)));// Retry the request\nreturn api(originalRequest);}// Log error details in development\nif(process.env.NODE_ENV==='development'){var _error$response2,_error$response3;console.error('API Error:',{url:originalRequest.url,method:originalRequest.method,status:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status,data:(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data,message:error.message});}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","timeout","validateStatus","status","retry","retryDelay","retryCount","interceptors","request","use","config","_config$url","admin","JSON","parse","localStorage","getItem","user","url","includes","token","Authorization","data","FormData","NODE_ENV","console","log","method","undefined","error","Promise","reject","response","_error$response","originalRequest","noRetryStatuses","_originalRequest$url","removeItem","window","location","href","_retry","resolve","setTimeout","_error$response2","_error$response3","message"],"sources":["C:/Users/hvard/Documents/GitHub/plagiguard/plagiguard-frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define the base URL for the API\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Create axios instance with custom config\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },  timeout: 60000, // 60 second timeout\r\n  validateStatus: function (status) {\r\n    return status >= 200 && status < 500; // Handle all responses\r\n  },\r\n  // Retry configuration\r\n  retry: 3,\r\n  retryDelay: (retryCount) => {\r\n    return retryCount * 1000; // time interval between retries\r\n  }\r\n});\r\n\r\n// Add request interceptor to handle authentication\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Get the tokens from localStorage\r\n    const admin = JSON.parse(localStorage.getItem('admin') || '{}');\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\n    // Clone the headers to avoid mutation\r\n    const headers = { ...config.headers };\r\n\r\n    // Send admin token for admin routes, user token for other routes\r\n    if (config.url?.includes('/admin/') && admin?.token) {\r\n      headers.Authorization = `Bearer ${admin.token}`;\r\n    } else if (user?.token) {\r\n      headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n\r\n    // For FormData requests, remove Content-Type to let browser set it\r\n    if (config.data instanceof FormData) {\r\n      delete headers['Content-Type'];\r\n    }\r\n\r\n    // Merge headers back into config\r\n    config.headers = headers;\r\n\r\n    // Debug logging only in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('Request:', {\r\n        url: config.baseURL + config.url,\r\n        method: config.method,\r\n        headers: { ...headers, Authorization: headers.Authorization ? '[REDACTED]' : undefined },\r\n        data: config.data instanceof FormData ? '[FormData]' : config.data\r\n      });\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request configuration error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // If we don't have a config, we can't retry\r\n    if (!originalRequest) {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    // Don't retry these status codes\r\n    const noRetryStatuses = [400, 401, 403, 404, 422];\r\n    \r\n    // Handle authentication errors\r\n    if (error.response?.status === 401) {\r\n      if (originalRequest.url?.includes('/admin/')) {\r\n        localStorage.removeItem('admin');\r\n        window.location.href = '/admin/login';\r\n      } else {\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    // Handle retry logic\r\n    if (\r\n      error.response &&\r\n      !noRetryStatuses.includes(error.response.status) &&\r\n      !originalRequest._retry &&\r\n      originalRequest.retry > 0\r\n    ) {\r\n      originalRequest._retry = true;\r\n      originalRequest.retry--;\r\n\r\n      // Wait before retrying\r\n      await new Promise(resolve => \r\n        setTimeout(resolve, originalRequest.retryDelay(originalRequest.retry))\r\n      );\r\n\r\n      // Retry the request\r\n      return api(originalRequest);\r\n    }\r\n\r\n    // Log error details in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('API Error:', {\r\n        url: originalRequest.url,\r\n        method: originalRequest.method,\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        message: error.message\r\n      });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}