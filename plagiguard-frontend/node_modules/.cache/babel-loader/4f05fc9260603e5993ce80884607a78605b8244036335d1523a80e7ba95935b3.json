{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hvard\\\\plagiguard\\\\plagiguard-frontend\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Result = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  if (!state) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"No result data found. Please upload a document first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => navigate('/dashboard'),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  const aiPercentage = Math.round(state.similarityScore * 100);\n  const humanPercentage = 100 - aiPercentage;\n  const chartData = {\n    labels: ['AI-Generated', 'Human-Written'],\n    datasets: [{\n      data: [aiPercentage, humanPercentage],\n      backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const highlightContent = () => {\n    if (!state.content || !state.aiParts) return 'No content to analyze';\n    let output = '';\n    state.content.split(' ').forEach((word, idx) => {\n      if (state.aiParts.includes(idx)) {\n        output += `<span class=\"ai-text\">${word}</span> `;\n      } else {\n        output += `<span class=\"human-text\">${word}</span> `;\n      }\n    });\n    return output;\n  };\n  const exportAsPDF = async () => {\n    // Initialize PDF with optimal quality settings\n    const pdf = new jsPDF({\n      unit: 'pt',\n      format: 'a4',\n      putOnlyUsedFonts: true,\n      compress: false // Disable compression for maximum text quality\n    });\n\n    // PDF layout configuration with standard margins\n    const pageWidth = pdf.internal.pageSize.getWidth();\n    const pageHeight = pdf.internal.pageSize.getHeight();\n    const margin = 72; // Standard 1-inch margin\n    const contentWidth = pageWidth - 2 * margin;\n    let currentY = margin;\n\n    // Optimized text settings\n    const fontSize = 12;\n    const baseLineHeight = fontSize * 2; // Double the font size\n    const minWordSpacing = 7; // Minimum space between words\n    const maxWordSpacing = 14; // Maximum space between words\n\n    // Enhanced text rendering settings\n    pdf.setFontSize(fontSize);\n    pdf.setFont('helvetica', 'normal');\n    pdf.setLineWidth(0.2);\n\n    // Helper function for text measurement and rendering\n    const renderWord = (word, x, y, isAI = false) => {\n      const xPos = Math.floor(x);\n      const yPos = Math.floor(y);\n      const wordWidth = Math.ceil(pdf.getStringUnitWidth(word) * fontSize);\n      if (isAI) {\n        // Draw highlight with extra padding\n        pdf.setFillColor(252, 232, 232);\n        pdf.rect(xPos - 4, yPos - fontSize - 2, wordWidth + 8, fontSize + 6, 'F');\n        pdf.setTextColor(180, 32, 32);\n      } else {\n        pdf.setTextColor(33, 37, 41);\n      }\n\n      // Render text with fill and stroke for maximum clarity\n      pdf.internal.write('2 Tr');\n      pdf.text(word, xPos, yPos);\n      pdf.internal.write('0 Tr');\n      return wordWidth;\n    };\n\n    // Process paragraphs with improved spacing\n    const processParagraph = (text, startY) => {\n      let y = startY;\n      const words = text.split(' ').filter(w => w.trim());\n      let line = [];\n      let lineWidth = 0;\n      let wordIndex = 0;\n      for (const word of words) {\n        const wordWidth = Math.ceil(pdf.getStringUnitWidth(word) * fontSize);\n        if (lineWidth + wordWidth + line.length * minWordSpacing > contentWidth - 20) {\n          // Render current line with justified spacing\n          const totalSpace = contentWidth - 20 - lineWidth;\n          const spaceCount = line.length - 1;\n          const spacing = spaceCount > 0 ? Math.min(Math.max(totalSpace / spaceCount, minWordSpacing), maxWordSpacing) : minWordSpacing;\n          let x = margin + 10;\n          line.forEach((w, i) => {\n            const isAI = state.aiParts.includes(wordIndex - line.length + i);\n            const width = renderWord(w, x, y, isAI);\n            x += width + spacing;\n          });\n\n          // Move to next line\n          y += baseLineHeight;\n          if (y > pageHeight - margin) {\n            addNewPage();\n            y = currentY;\n          }\n\n          // Start new line\n          line = [word];\n          lineWidth = wordWidth;\n        } else {\n          line.push(word);\n          lineWidth += wordWidth;\n        }\n        wordIndex++;\n      }\n\n      // Render last line (left-aligned)\n      if (line.length > 0) {\n        let x = margin + 10;\n        line.forEach((word, i) => {\n          const isAI = state.aiParts.includes(wordIndex - line.length + i);\n          const width = renderWord(word, x, y, isAI);\n          x += width + minWordSpacing;\n        });\n        y += baseLineHeight * 1.5; // Extra space after paragraph\n      }\n      return y;\n    };\n\n    // Helper function to add new page with consistent styling\n    const addNewPage = () => {\n      pdf.addPage();\n      pdf.setFillColor(13, 110, 253);\n      pdf.rect(0, 0, pageWidth, 60, 'F');\n      for (let i = 0; i < 5; i++) {\n        pdf.setFillColor(13, 110, 253, (5 - i) / 10);\n        pdf.rect(0, 60 + i * 3, pageWidth, 3, 'F');\n      }\n      pdf.setTextColor(255, 255, 255);\n      pdf.setFontSize(12);\n      pdf.text('PlagiGuard Report - Continued', margin, 35);\n      currentY = 100;\n    };\n\n    // Create header with gradient\n    pdf.setFillColor(13, 110, 253);\n    pdf.rect(0, 0, pageWidth, 120, 'F');\n    for (let i = 0; i < 5; i++) {\n      pdf.setFillColor(13, 110, 253, (5 - i) / 10);\n      pdf.rect(0, 120 + i * 3, pageWidth, 3, 'F');\n    }\n\n    // Title\n    pdf.setTextColor(255, 255, 255);\n    pdf.setFont('helvetica', 'bold');\n    pdf.setFontSize(28);\n    pdf.text('PlagiGuard Report', margin, 70);\n    pdf.setFontSize(14);\n    pdf.text('AI Content Detection Analysis', margin, 95);\n    currentY = 160;\n\n    // Document Info Section\n    pdf.setFillColor(248, 249, 250);\n    pdf.setDrawColor(222, 226, 230);\n    pdf.roundedRect(margin - 10, currentY - 10, contentWidth + 20, 100, 3, 3, 'FD');\n    pdf.setTextColor(33, 37, 41);\n    pdf.setFontSize(18);\n    pdf.setFont('helvetica', 'bold');\n    pdf.text('Document Information', margin, currentY + 20);\n    pdf.setFontSize(12);\n    pdf.setFont('helvetica', 'normal');\n    pdf.text(`File Name: ${state.fileName}`, margin + 10, currentY + 45);\n    pdf.text(`Analysis Date: ${new Date().toLocaleString()}`, margin + 10, currentY + 65);\n    currentY += 120;\n\n    // Content Analysis Section\n    pdf.setFillColor(255, 255, 255);\n    pdf.roundedRect(margin - 10, currentY - 10, contentWidth + 20, 180, 3, 3, 'FD');\n    pdf.setFont('helvetica', 'bold');\n    pdf.setFontSize(18);\n    pdf.text('Content Analysis', margin, currentY + 20);\n    pdf.setFontSize(14);\n    pdf.setTextColor(220, 53, 69);\n    pdf.text(`AI Generated Content: ${aiPercentage}%`, margin + 10, currentY + 50);\n    pdf.setTextColor(13, 110, 253);\n    pdf.text(`Human Written Content: ${humanPercentage}%`, margin + 10, currentY + 75);\n\n    // Add pie chart\n    const canvas = document.querySelector('canvas');\n    if (canvas) {\n      const chartImg = canvas.toDataURL('image/png', 1.0);\n      pdf.addImage(chartImg, 'PNG', pageWidth - 220, currentY + 20, 140, 140);\n    }\n    currentY += 200;\n\n    // Content Review Section\n    pdf.setTextColor(33, 37, 41);\n    pdf.setFont('helvetica', 'bold');\n    pdf.setFontSize(18);\n    pdf.text('Content Review', margin, currentY);\n    currentY += 30;\n\n    // Info box\n    pdf.setFillColor(232, 244, 253);\n    pdf.setTextColor(13, 110, 253);\n    pdf.roundedRect(margin - 5, currentY - 5, contentWidth + 10, 40, 3, 3, 'F');\n    pdf.setFontSize(11);\n    pdf.text('Note: Text highlighted in red indicates potential AI-generated content.', margin + 10, currentY + 20);\n    currentY += 60;\n\n    // Process content with enhanced text rendering\n    pdf.setTextColor(33, 37, 41);\n    pdf.setFont('helvetica', 'normal');\n    pdf.setFontSize(12);\n\n    // Process content paragraph by paragraph for better structure\n    const paragraphs = state.content.split('\\n\\n');\n    let wordOffset = 0;\n    paragraphs.forEach((paragraph, paragraphIndex) => {\n      if (paragraph.trim() === '') return;\n      const words = paragraph.split(' ').filter(w => w.trim());\n      let line = '';\n      let lineWords = [];\n      let xPos = margin + 10;\n      words.forEach((word, idx) => {\n        const testLine = line + (line ? ' ' : '') + word;\n        const testWidth = Math.ceil(pdf.getStringUnitWidth(testLine) * pdf.getFontSize());\n        if (testWidth > contentWidth - 50) {\n          // Increased margin for safety\n          // Improved spacing calculation\n          const totalSpaces = lineWords.length - 1;\n          const totalWidth = Math.ceil(pdf.getStringUnitWidth(line) * pdf.getFontSize());\n          const availableSpace = contentWidth - 50 - totalWidth;\n          const extraSpacing = totalSpaces > 0 ? Math.min(availableSpace / totalSpaces, 10) : 0; // Limited max spacing\n\n          // Render current line with improved positioning\n          xPos = margin + 10;\n          lineWords.forEach((w, i) => {\n            const isWordAI = state.aiParts.includes(wordOffset + idx - lineWords.length + i);\n            renderText(w, xPos, currentY, isWordAI);\n\n            // Calculate next word position with consistent spacing\n            const wordWidth = Math.ceil(pdf.getStringUnitWidth(w) * pdf.getFontSize());\n            xPos += wordWidth + wordSpacing + (i < lineWords.length - 1 ? extraSpacing : 0);\n          });\n          currentY += baseLineHeight;\n          if (currentY > pageHeight - margin) {\n            addNewPage();\n          }\n          line = word;\n          lineWords = [word];\n        } else {\n          line = testLine;\n          lineWords.push(word);\n        }\n      });\n\n      // Handle last line with improved spacing\n      if (lineWords.length > 0) {\n        xPos = margin + 10;\n        lineWords.forEach((word, i) => {\n          const isWordAI = state.aiParts.includes(wordOffset + words.length - lineWords.length + i);\n          renderText(word, xPos, currentY, isWordAI);\n          const wordWidth = Math.ceil(pdf.getStringUnitWidth(word) * pdf.getFontSize());\n          xPos += wordWidth + wordSpacing;\n        });\n      }\n      wordOffset += words.length;\n      currentY += baseLineHeight * 1.5; // Extra spacing between paragraphs\n      if (currentY > pageHeight - margin) {\n        addNewPage();\n      }\n    });\n    pdf.save(`PlagiGuard_Report_${state.fileName}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      id: \"report-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header bg-primary text-white d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: \"Analysis Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-light\",\n            onClick: exportAsPDF,\n            children: \"Export as PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Document Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"File Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 22\n                  }, this), \" \", state.fileName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Analysis Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 22\n                  }, this), \" \", new Date().toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Content Analysis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"AI Content Detection:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 22\n                  }, this), \" \", aiPercentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Human Content Detection:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 22\n                  }, this), \" \", humanPercentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  maxWidth: '400px',\n                  margin: '0 auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Pie, {\n                  data: chartData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Content Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-info\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Highlighted text indicates potential AI-generated content. Please note that this is an automated analysis and may not be 100% accurate.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-3 mt-3 content-area\",\n              style: {\n                whiteSpace: 'pre-wrap',\n                backgroundColor: '#fff',\n                maxHeight: '400px',\n                overflowY: 'auto'\n              },\n              dangerouslySetInnerHTML: {\n                __html: highlightContent()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => navigate('/dashboard'),\n          children: \"Upload Another File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => navigate('/history'),\n          children: \"View History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .ai-text {\n          color: #dc3545;  /* Bootstrap red */\n          background-color: rgba(220, 53, 69, 0.1);\n          padding: 2px 4px;\n          border-radius: 3px;\n          transition: background-color 0.2s;\n        }\n        .ai-text:hover {\n          background-color: rgba(220, 53, 69, 0.2);\n        }\n        .human-text {\n          color: #0d6efd;  /* Bootstrap blue */\n          background-color: rgba(13, 110, 253, 0.1);\n          padding: 2px 4px;\n          border-radius: 3px;\n          transition: background-color 0.2s;\n        }\n        .human-text:hover {\n          background-color: rgba(13, 110, 253, 0.2);\n        }\n        .content-area {\n          line-height: 2;\n          font-size: 1.1rem;\n          border-radius: 8px;\n          box-shadow: inset 0 0 10px rgba(0,0,0,0.1);\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Result, \"swtv2cUIBi1p5TRCrVajRailzpM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useLocation","useNavigate","Navbar","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","html2canvas","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Result","_s","state","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","aiPercentage","Math","round","similarityScore","humanPercentage","chartData","labels","datasets","data","backgroundColor","borderColor","borderWidth","highlightContent","content","aiParts","output","split","forEach","word","idx","includes","exportAsPDF","pdf","unit","format","putOnlyUsedFonts","compress","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","margin","contentWidth","currentY","fontSize","baseLineHeight","minWordSpacing","maxWordSpacing","setFontSize","setFont","setLineWidth","renderWord","x","y","isAI","xPos","floor","yPos","wordWidth","ceil","getStringUnitWidth","setFillColor","rect","setTextColor","write","text","processParagraph","startY","words","filter","w","trim","line","lineWidth","wordIndex","length","totalSpace","spaceCount","spacing","min","max","i","width","addNewPage","push","addPage","setDrawColor","roundedRect","Date","toLocaleString","canvas","document","querySelector","chartImg","toDataURL","addImage","paragraphs","wordOffset","paragraph","paragraphIndex","lineWords","testLine","testWidth","getFontSize","totalSpaces","totalWidth","availableSpace","extraSpacing","isWordAI","renderText","wordSpacing","save","id","style","maxWidth","whiteSpace","maxHeight","overflowY","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/hvard/plagiguard/plagiguard-frontend/src/components/Result.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\n// Register ChartJS components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst Result = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  if (!state) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"container mt-5\">\r\n          <div className=\"alert alert-warning\">\r\n            No result data found. Please upload a document first.\r\n          </div>\r\n          <button className=\"btn btn-primary\" onClick={() => navigate('/dashboard')}>\r\n            Back to Dashboard\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const aiPercentage = Math.round(state.similarityScore * 100);\r\n  const humanPercentage = 100 - aiPercentage;\r\n\r\n  const chartData = {\r\n    labels: ['AI-Generated', 'Human-Written'],\r\n    datasets: [\r\n      {\r\n        data: [aiPercentage, humanPercentage],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.8)',\r\n          'rgba(54, 162, 235, 0.8)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const highlightContent = () => {\r\n    if (!state.content || !state.aiParts) return 'No content to analyze';\r\n    let output = '';\r\n    state.content.split(' ').forEach((word, idx) => {\r\n      if (state.aiParts.includes(idx)) {\r\n        output += `<span class=\"ai-text\">${word}</span> `;\r\n      } else {\r\n        output += `<span class=\"human-text\">${word}</span> `;\r\n      }\r\n    });\r\n    return output;\r\n  };\r\n\r\n  const exportAsPDF = async () => {\r\n    // Initialize PDF with optimal quality settings\r\n    const pdf = new jsPDF({\r\n      unit: 'pt',\r\n      format: 'a4',\r\n      putOnlyUsedFonts: true,\r\n      compress: false  // Disable compression for maximum text quality\r\n    });\r\n    \r\n    // PDF layout configuration with standard margins\r\n    const pageWidth = pdf.internal.pageSize.getWidth();\r\n    const pageHeight = pdf.internal.pageSize.getHeight();\r\n    const margin = 72;  // Standard 1-inch margin\r\n    const contentWidth = pageWidth - (2 * margin);\r\n    let currentY = margin;\r\n    \r\n    // Optimized text settings\r\n    const fontSize = 12;\r\n    const baseLineHeight = fontSize * 2;  // Double the font size\r\n    const minWordSpacing = 7;  // Minimum space between words\r\n    const maxWordSpacing = 14; // Maximum space between words\r\n    \r\n    // Enhanced text rendering settings\r\n    pdf.setFontSize(fontSize);\r\n    pdf.setFont('helvetica', 'normal');\r\n    pdf.setLineWidth(0.2);\r\n    \r\n    // Helper function for text measurement and rendering\r\n    const renderWord = (word, x, y, isAI = false) => {\r\n      const xPos = Math.floor(x);\r\n      const yPos = Math.floor(y);\r\n      const wordWidth = Math.ceil(pdf.getStringUnitWidth(word) * fontSize);\r\n      \r\n      if (isAI) {\r\n        // Draw highlight with extra padding\r\n        pdf.setFillColor(252, 232, 232);\r\n        pdf.rect(\r\n          xPos - 4,\r\n          yPos - fontSize - 2,\r\n          wordWidth + 8,\r\n          fontSize + 6,\r\n          'F'\r\n        );\r\n        pdf.setTextColor(180, 32, 32);\r\n      } else {\r\n        pdf.setTextColor(33, 37, 41);\r\n      }\r\n      \r\n      // Render text with fill and stroke for maximum clarity\r\n      pdf.internal.write('2 Tr');\r\n      pdf.text(word, xPos, yPos);\r\n      pdf.internal.write('0 Tr');\r\n      \r\n      return wordWidth;\r\n    };\r\n    \r\n    // Process paragraphs with improved spacing\r\n    const processParagraph = (text, startY) => {\r\n      let y = startY;\r\n      const words = text.split(' ').filter(w => w.trim());\r\n      let line = [];\r\n      let lineWidth = 0;\r\n      let wordIndex = 0;\r\n      \r\n      for (const word of words) {\r\n        const wordWidth = Math.ceil(pdf.getStringUnitWidth(word) * fontSize);\r\n        \r\n        if (lineWidth + wordWidth + (line.length * minWordSpacing) > contentWidth - 20) {\r\n          // Render current line with justified spacing\r\n          const totalSpace = contentWidth - 20 - lineWidth;\r\n          const spaceCount = line.length - 1;\r\n          const spacing = spaceCount > 0 \r\n            ? Math.min(Math.max(totalSpace / spaceCount, minWordSpacing), maxWordSpacing)\r\n            : minWordSpacing;\r\n          \r\n          let x = margin + 10;\r\n          line.forEach((w, i) => {\r\n            const isAI = state.aiParts.includes(wordIndex - line.length + i);\r\n            const width = renderWord(w, x, y, isAI);\r\n            x += width + spacing;\r\n          });\r\n          \r\n          // Move to next line\r\n          y += baseLineHeight;\r\n          if (y > pageHeight - margin) {\r\n            addNewPage();\r\n            y = currentY;\r\n          }\r\n          \r\n          // Start new line\r\n          line = [word];\r\n          lineWidth = wordWidth;\r\n        } else {\r\n          line.push(word);\r\n          lineWidth += wordWidth;\r\n        }\r\n        wordIndex++;\r\n      }\r\n      \r\n      // Render last line (left-aligned)\r\n      if (line.length > 0) {\r\n        let x = margin + 10;\r\n        line.forEach((word, i) => {\r\n          const isAI = state.aiParts.includes(wordIndex - line.length + i);\r\n          const width = renderWord(word, x, y, isAI);\r\n          x += width + minWordSpacing;\r\n        });\r\n        y += baseLineHeight * 1.5;  // Extra space after paragraph\r\n      }\r\n      \r\n      return y;\r\n    };\r\n    \r\n    // Helper function to add new page with consistent styling\r\n    const addNewPage = () => {\r\n      pdf.addPage();\r\n      pdf.setFillColor(13, 110, 253);\r\n      pdf.rect(0, 0, pageWidth, 60, 'F');\r\n      for(let i = 0; i < 5; i++) {\r\n        pdf.setFillColor(13, 110, 253, (5-i)/10);\r\n        pdf.rect(0, 60 + i*3, pageWidth, 3, 'F');\r\n      }\r\n      pdf.setTextColor(255, 255, 255);\r\n      pdf.setFontSize(12);\r\n      pdf.text('PlagiGuard Report - Continued', margin, 35);\r\n      currentY = 100;\r\n    };\r\n\r\n    // Create header with gradient\r\n    pdf.setFillColor(13, 110, 253);\r\n    pdf.rect(0, 0, pageWidth, 120, 'F');\r\n    for(let i = 0; i < 5; i++) {\r\n      pdf.setFillColor(13, 110, 253, (5-i)/10);\r\n      pdf.rect(0, 120 + i*3, pageWidth, 3, 'F');\r\n    }\r\n\r\n    // Title\r\n    pdf.setTextColor(255, 255, 255);\r\n    pdf.setFont('helvetica', 'bold');\r\n    pdf.setFontSize(28);\r\n    pdf.text('PlagiGuard Report', margin, 70);\r\n    pdf.setFontSize(14);\r\n    pdf.text('AI Content Detection Analysis', margin, 95);\r\n    currentY = 160;\r\n\r\n    // Document Info Section\r\n    pdf.setFillColor(248, 249, 250);\r\n    pdf.setDrawColor(222, 226, 230);\r\n    pdf.roundedRect(margin - 10, currentY - 10, contentWidth + 20, 100, 3, 3, 'FD');\r\n    \r\n    pdf.setTextColor(33, 37, 41);\r\n    pdf.setFontSize(18);\r\n    pdf.setFont('helvetica', 'bold');\r\n    pdf.text('Document Information', margin, currentY + 20);\r\n    \r\n    pdf.setFontSize(12);\r\n    pdf.setFont('helvetica', 'normal');\r\n    pdf.text(`File Name: ${state.fileName}`, margin + 10, currentY + 45);\r\n    pdf.text(`Analysis Date: ${new Date().toLocaleString()}`, margin + 10, currentY + 65);\r\n    currentY += 120;\r\n\r\n    // Content Analysis Section\r\n    pdf.setFillColor(255, 255, 255);\r\n    pdf.roundedRect(margin - 10, currentY - 10, contentWidth + 20, 180, 3, 3, 'FD');\r\n    \r\n    pdf.setFont('helvetica', 'bold');\r\n    pdf.setFontSize(18);\r\n    pdf.text('Content Analysis', margin, currentY + 20);\r\n\r\n    pdf.setFontSize(14);\r\n    pdf.setTextColor(220, 53, 69);\r\n    pdf.text(`AI Generated Content: ${aiPercentage}%`, margin + 10, currentY + 50);\r\n    pdf.setTextColor(13, 110, 253);\r\n    pdf.text(`Human Written Content: ${humanPercentage}%`, margin + 10, currentY + 75);\r\n\r\n    // Add pie chart\r\n    const canvas = document.querySelector('canvas');\r\n    if (canvas) {\r\n      const chartImg = canvas.toDataURL('image/png', 1.0);\r\n      pdf.addImage(chartImg, 'PNG', pageWidth - 220, currentY + 20, 140, 140);\r\n    }\r\n    currentY += 200;\r\n\r\n    // Content Review Section\r\n    pdf.setTextColor(33, 37, 41);\r\n    pdf.setFont('helvetica', 'bold');\r\n    pdf.setFontSize(18);\r\n    pdf.text('Content Review', margin, currentY);\r\n    currentY += 30;\r\n\r\n    // Info box\r\n    pdf.setFillColor(232, 244, 253);\r\n    pdf.setTextColor(13, 110, 253);\r\n    pdf.roundedRect(margin - 5, currentY - 5, contentWidth + 10, 40, 3, 3, 'F');\r\n    pdf.setFontSize(11);\r\n    pdf.text('Note: Text highlighted in red indicates potential AI-generated content.', margin + 10, currentY + 20);\r\n    currentY += 60;\r\n    \r\n    // Process content with enhanced text rendering\r\n    pdf.setTextColor(33, 37, 41);\r\n    pdf.setFont('helvetica', 'normal');\r\n    pdf.setFontSize(12);\r\n    \r\n    // Process content paragraph by paragraph for better structure\r\n    const paragraphs = state.content.split('\\n\\n');\r\n    let wordOffset = 0;\r\n    \r\n    paragraphs.forEach((paragraph, paragraphIndex) => {\r\n      if (paragraph.trim() === '') return;\r\n      \r\n      const words = paragraph.split(' ').filter(w => w.trim());\r\n      let line = '';\r\n      let lineWords = [];\r\n      let xPos = margin + 10;\r\n      \r\n      words.forEach((word, idx) => {\r\n        const testLine = line + (line ? ' ' : '') + word;\r\n        const testWidth = Math.ceil(pdf.getStringUnitWidth(testLine) * pdf.getFontSize());\r\n        \r\n        if (testWidth > contentWidth - 50) {  // Increased margin for safety\r\n          // Improved spacing calculation\r\n          const totalSpaces = lineWords.length - 1;\r\n          const totalWidth = Math.ceil(pdf.getStringUnitWidth(line) * pdf.getFontSize());\r\n          const availableSpace = contentWidth - 50 - totalWidth;\r\n          const extraSpacing = totalSpaces > 0 ? \r\n            Math.min(availableSpace / totalSpaces, 10) : 0;  // Limited max spacing\r\n          \r\n          // Render current line with improved positioning\r\n          xPos = margin + 10;\r\n          lineWords.forEach((w, i) => {\r\n            const isWordAI = state.aiParts.includes(wordOffset + idx - lineWords.length + i);\r\n            renderText(w, xPos, currentY, isWordAI);\r\n            \r\n            // Calculate next word position with consistent spacing\r\n            const wordWidth = Math.ceil(pdf.getStringUnitWidth(w) * pdf.getFontSize());\r\n            xPos += wordWidth + wordSpacing + (i < lineWords.length - 1 ? extraSpacing : 0);\r\n          });\r\n          \r\n          currentY += baseLineHeight;\r\n          if (currentY > pageHeight - margin) {\r\n            addNewPage();\r\n          }\r\n          \r\n          line = word;\r\n          lineWords = [word];\r\n        } else {\r\n          line = testLine;\r\n          lineWords.push(word);\r\n        }\r\n      });\r\n      \r\n      // Handle last line with improved spacing\r\n      if (lineWords.length > 0) {\r\n        xPos = margin + 10;\r\n        lineWords.forEach((word, i) => {\r\n          const isWordAI = state.aiParts.includes(\r\n            wordOffset + words.length - lineWords.length + i\r\n          );\r\n          renderText(word, xPos, currentY, isWordAI);\r\n          const wordWidth = Math.ceil(pdf.getStringUnitWidth(word) * pdf.getFontSize());\r\n          xPos += wordWidth + wordSpacing;\r\n        });\r\n      }\r\n      \r\n      wordOffset += words.length;\r\n      currentY += baseLineHeight * 1.5;  // Extra spacing between paragraphs\r\n      if (currentY > pageHeight - margin) {\r\n        addNewPage();\r\n      }\r\n    });\r\n\r\n    pdf.save(`PlagiGuard_Report_${state.fileName}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container mt-5\" id=\"report-content\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\r\n            <h3 className=\"mb-0\">Analysis Result</h3>\r\n            <button className=\"btn btn-outline-light\" onClick={exportAsPDF}>\r\n              Export as PDF\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"mb-4\">\r\n                  <h4>Document Information</h4>\r\n                  <p><strong>File Name:</strong> {state.fileName}</p>\r\n                  <p><strong>Analysis Date:</strong> {new Date().toLocaleString()}</p>\r\n                </div>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <h4>Content Analysis</h4>\r\n                  <p><strong>AI Content Detection:</strong> {aiPercentage}%</p>\r\n                  <p><strong>Human Content Detection:</strong> {humanPercentage}%</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"col-md-6\">\r\n                <div style={{ maxWidth: '400px', margin: '0 auto' }}>\r\n                  <Pie data={chartData} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n              <h4>Content Review</h4>\r\n              <div className=\"alert alert-info\">\r\n                <small>\r\n                  Highlighted text indicates potential AI-generated content.\r\n                  Please note that this is an automated analysis and may not be 100% accurate.\r\n                </small>\r\n              </div>\r\n              <div \r\n                className=\"border p-3 mt-3 content-area\"\r\n                style={{ \r\n                  whiteSpace: 'pre-wrap',\r\n                  backgroundColor: '#fff',\r\n                  maxHeight: '400px',\r\n                  overflowY: 'auto'\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: highlightContent() }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4 d-flex gap-2\">\r\n          <button className=\"btn btn-primary\" onClick={() => navigate('/dashboard')}>\r\n            Upload Another File\r\n          </button>\r\n          <button className=\"btn btn-secondary\" onClick={() => navigate('/history')}>\r\n            View History\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <style>{`\r\n        .ai-text {\r\n          color: #dc3545;  /* Bootstrap red */\r\n          background-color: rgba(220, 53, 69, 0.1);\r\n          padding: 2px 4px;\r\n          border-radius: 3px;\r\n          transition: background-color 0.2s;\r\n        }\r\n        .ai-text:hover {\r\n          background-color: rgba(220, 53, 69, 0.2);\r\n        }\r\n        .human-text {\r\n          color: #0d6efd;  /* Bootstrap blue */\r\n          background-color: rgba(13, 110, 253, 0.1);\r\n          padding: 2px 4px;\r\n          border-radius: 3px;\r\n          transition: background-color 0.2s;\r\n        }\r\n        .human-text:hover {\r\n          background-color: rgba(13, 110, 253, 0.2);\r\n        }\r\n        .content-area {\r\n          line-height: 2;\r\n          font-size: 1.1rem;\r\n          border-radius: 8px;\r\n          box-shadow: inset 0 0 10px rgba(0,0,0,0.1);\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}